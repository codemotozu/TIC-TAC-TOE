name: Build,Analyze,scan
on:
  push:
    branches:
      - main
jobs:
  build-analyze-scan:
    name: Build
    runs-on: [self-hosted]  # Or use ubuntu-latest if you don't need self-hosted......
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3
        with:
          fetch-depth: 0
          persist-credentials: false  # Prevents git config issues
          
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory /home/ubuntu/actions-runner/actions-runner/_work/TIC-TAC-TOE/TIC-TAC-TOE
          
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: npm install dependency
        run: npm install
        
      - name: Trivy file scan
        run: trivy fs . > trivyfs.txt
        
      - name: Docker Build and push
        run: |
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe codemotozu/tic-tac-toe:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push codemotozu/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: 1
        
      - name: Image scan
        run: trivy image codemotozu/tic-tac-toe:latest > trivyimage.txt

  deploy:
   needs: build-analyze-scan
   runs-on: [self-hosted]
   steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
      - name: docker pull image
        run: docker pull codemotozu/tic-tac-toe:latest
        
      - name: Image scan
        run: trivy image codemotozu/tic-tac-toe:latest > trivyimagedeploy.txt
        
      - name: Stop and remove existing container
        run: |
          docker stop game || true
          docker rm game || true
        
      - name: Deploy to container
        run: docker run -d --name game -p 3000:3000 codemotozu/tic-tac-toe:latest

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml

      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v2  # Updated to a maintained action
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: '#githubactions-eks'

