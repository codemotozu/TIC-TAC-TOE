# name: Build,Analyze,scan
# on:
#   push:
#     branches:
#       - main
# jobs:
#   build-analyze-scan:
#     name: Build
#     runs-on: [self-hosted]  # Or use ubuntu-latest if you don't need self-hosted......
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3  # Updated to v3
#         with:
#           fetch-depth: 0
#           persist-credentials: false  # Prevents git config issues
          
#       - name: Configure Git Safe Directory
#         run: |
#           git config --global --add safe.directory "$GITHUB_WORKSPACE"
#           git config --global --add safe.directory /home/ubuntu/actions-runner/actions-runner/_work/TIC-TAC-TOE/TIC-TAC-TOE
          
#       - name: Build and analyze with SonarQube
#         uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
#       - name: npm install dependency
#         run: npm install
        
#       - name: Trivy file scan
#         run: trivy fs . > trivyfs.txt
        
#       - name: Docker Build and push
#         run: |
#           docker build -t tic-tac-toe .
#           docker tag tic-tac-toe codemotozu/tic-tac-toe:latest
#           docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#           docker push codemotozu/tic-tac-toe:latest
#         env:
#           DOCKER_CLI_ACI: 1
        
#       - name: Image scan
#         run: trivy image codemotozu/tic-tac-toe:latest > trivyimage.txt

#   deploy:
#    needs: build-analyze-scan
#    runs-on: [self-hosted]
#    steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           persist-credentials: false
          
#       - name: Configure Git Safe Directory
#         run: |
#           git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
#       - name: docker pull image
#         run: docker pull codemotozu/tic-tac-toe:latest
        
#       - name: Image scan
#         run: trivy image codemotozu/tic-tac-toe:latest > trivyimagedeploy.txt
        
#       - name: Stop and remove existing container
#         run: |
#           docker stop game || true
#           docker rm game || true
        
#       - name: Deploy to container
#         run: docker run -d --name game -p 3000:3000 codemotozu/tic-tac-toe:latest

#       - name: Update kubeconfig
#         run: aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD

#       - name: Deploy to kubernetes
#         run: kubectl apply -f deployment-service.yml

#       - name: Send a Slack Notification
#         if: always()
#         uses: act10ns/slack@v2  # Updated to a maintained action
#         with:
#           status: ${{ job.status }}
#           webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
#           channel: '#githubactions-eks'










name: Build,Analyze,scan
on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: Build
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory /home/ubuntu/actions-runner/actions-runner/_work/TIC-TAC-TOE/TIC-TAC-TOE
          
      # Run npm install first (needed for SonarQube and build)
      - name: npm install dependency
        run: |
          # Use npm ci for faster installs in CI
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi
          
      # Run SonarQube and Trivy in parallel
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true  # Don't fail the build if SonarQube is down
        
      - name: Trivy file scan
        run: |
          # Run Trivy only on source code, not node_modules
          trivy fs --skip-dirs node_modules . > trivyfs.txt || true
        
      - name: Docker Build and push
        run: |
          # Clean up any existing containers/images to free space
          docker system prune -f || true
          
          # Build the Docker image
          echo "Building Docker image..."
          docker build -t tic-tac-toe . --no-cache
          
          # Tag the image
          echo "Tagging image..."
          docker tag tic-tac-toe codemotozu/tic-tac-toe:latest
          
          # Login to Docker Hub
          echo "Logging in to Docker Hub..."
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # Push the image
          echo "Pushing image to Docker Hub..."
          docker push codemotozu/tic-tac-toe:latest
          
          # Clean up local image to save space
          docker rmi tic-tac-toe || true
        
      - name: Image scan
        run: |
          # Quick scan for critical vulnerabilities only
          trivy image --severity CRITICAL,HIGH --no-progress codemotozu/tic-tac-toe:latest > trivyimage.txt || true

  deploy:
    needs: build-analyze-scan
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
      - name: Stop and remove existing container
        run: |
          # Stop and remove any existing containers
          docker stop game 2>/dev/null || true
          docker rm game 2>/dev/null || true
          
          # Clean up old images to free space
          docker image prune -f || true
        
      - name: Deploy to container
        run: |
          # Use the image we just pushed (it's already available locally)
          docker run -d --name game -p 3000:3000 codemotozu/tic-tac-toe:latest

      - name: Update kubeconfig
        run: |
          # Update kubeconfig for EKS
          aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: |
          # Apply the deployment
          kubectl apply -f deployment-service.yml
          
          # Force a rollout to use the new image
          kubectl rollout restart deployment/tic-tac-toe || true
          
          # Wait for rollout to complete (max 5 minutes)
          kubectl rollout status deployment/tic-tac-toe --timeout=300s || true

      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: '#githubactions-eks'
