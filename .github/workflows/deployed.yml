# name: Build,Analyze,scan
# on:
#   push:
#     branches:
#       - main
# jobs:
#   build-analyze-scan:
#     name: Build
#     runs-on: [self-hosted]  # Or use ubuntu-latest if you don't need self-hosted......
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3  # Updated to v3
#         with:
#           fetch-depth: 0
#           persist-credentials: false  # Prevents git config issues
          
#       - name: Configure Git Safe Directory
#         run: |
#           git config --global --add safe.directory "$GITHUB_WORKSPACE"
#           git config --global --add safe.directory /home/ubuntu/actions-runner/actions-runner/_work/TIC-TAC-TOE/TIC-TAC-TOE
          
#       - name: Build and analyze with SonarQube
#         uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
#       - name: npm install dependency
#         run: npm install
        
#       - name: Trivy file scan
#         run: trivy fs . > trivyfs.txt
        
#       - name: Docker Build and push
#         run: |
#           docker build -t tic-tac-toe .
#           docker tag tic-tac-toe codemotozu/tic-tac-toe:latest
#           docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#           docker push codemotozu/tic-tac-toe:latest
#         env:
#           DOCKER_CLI_ACI: 1
        
#       - name: Image scan
#         run: trivy image codemotozu/tic-tac-toe:latest > trivyimage.txt

#   deploy:
#    needs: build-analyze-scan
#    runs-on: [self-hosted]
#    steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           persist-credentials: false
          
#       - name: Configure Git Safe Directory
#         run: |
#           git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
#       - name: docker pull image
#         run: docker pull codemotozu/tic-tac-toe:latest
        
#       - name: Image scan
#         run: trivy image codemotozu/tic-tac-toe:latest > trivyimagedeploy.txt
        
#       - name: Stop and remove existing container
#         run: |
#           docker stop game || true
#           docker rm game || true
        
#       - name: Deploy to container
#         run: docker run -d --name game -p 3000:3000 codemotozu/tic-tac-toe:latest

#       - name: Update kubeconfig
#         run: aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD

#       - name: Deploy to kubernetes
#         run: kubectl apply -f deployment-service.yml

#       - name: Send a Slack Notification
#         if: always()
#         uses: act10ns/slack@v2  # Updated to a maintained action
#         with:
#           status: ${{ job.status }}
#           webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
#           channel: '#githubactions-eks'


name: Build,Analyze,scan
on:
  push:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-analyze-scan:
    name: Build
    runs-on: ubuntu-latest  # Use GitHub-hosted runners for better performance
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4
        with:
          fetch-depth: 0
          
      # Cache Node modules
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: npm install dependency
        run: npm ci --prefer-offline --no-audit
        
      # Parallel execution of SonarQube and Trivy file scan
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      # Set up Docker Buildx for better caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Build and push with cache
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: codemotozu/tic-tac-toe:latest
          cache-from: type=registry,ref=codemotozu/tic-tac-toe:buildcache
          cache-to: type=registry,ref=codemotozu/tic-tac-toe:buildcache,mode=max
          
      # Run security scans in parallel
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'codemotozu/tic-tac-toe:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    needs: build-analyze-scan
    runs-on: ubuntu-latest  # Use GitHub-hosted runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      # Deploy to Kubernetes only (remove Docker container deployment if using K8s)
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name EKS_CLOUD --region us-east-1
        
      - name: Deploy to kubernetes
        run: |
          kubectl set image deployment/tic-tac-toe tic-tac-toe=codemotozu/tic-tac-toe:latest
          kubectl rollout status deployment/tic-tac-toe --timeout=5m
          
      # Simplified notification
      - name: Send a Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "Deployment Status: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Deployment Status:* ${{ job.status }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}"
                  }
                }
              ]
            }

# Optional: Add a cleanup job
  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Clean up old Docker images
        run: |
          # Add cleanup logic here if needed
          echo "Cleanup completed"
